<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Accepted requests" xml:space="preserve">
    <value>Одобренные запросы</value>
  </data>
  <data name="Approuved" xml:space="preserve">
    <value>Одобрено</value>
    <comment>Approuved</comment>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Комментарий</value>
    <comment>Comment</comment>
  </data>
  <data name="Date of beginning" xml:space="preserve">
    <value>Дата начала</value>
  </data>
  <data name="Date of ending" xml:space="preserve">
    <value>Дата окончания</value>
    <comment>Date of ending</comment>
  </data>
  <data name="Days that you can request for leave" xml:space="preserve">
    <value>Оставшиеся дни</value>
    <comment>Days that you can request for leave</comment>
  </data>
  <data name="End date" xml:space="preserve">
    <value>Дата окончания</value>
    <comment>End date</comment>
  </data>
  <data name="End date is required" xml:space="preserve">
    <value>Дата окончания - обязательное поле</value>
    <comment>End date is required</comment>
  </data>
  <data name="Leave type" xml:space="preserve">
    <value>Тип отпуска</value>
    <comment>Leave type</comment>
  </data>
  <data name="Leave Type is required" xml:space="preserve">
    <value>Тип отпуска - обязательное поле</value>
    <comment>Leave Type is required</comment>
  </data>
  <data name="List of requests without any sorting" xml:space="preserve">
    <value>Полный список запросов</value>
  </data>
  <data name="Moderator" xml:space="preserve">
    <value>Модератор</value>
    <comment>Moderator</comment>
  </data>
  <data name="Number of days in not still reviewed request" xml:space="preserve">
    <value>Количество дней в необработанных запросах</value>
    <comment>Number of days in not still reviewed request</comment>
  </data>
  <data name="Number of days, that was approuved" xml:space="preserve">
    <value>Количество одобренных дней</value>
    <comment>Number of days, that was approuved</comment>
  </data>
  <data name="Number of days, which was approuved, and period of leave began" xml:space="preserve">
    <value>Количество дней в одобренных и начавшихся отсутствиях</value>
    <comment>Number of days, which was approuved, and period of leave began</comment>
  </data>
  <data name="Number of days, which were rejected" xml:space="preserve">
    <value>Количество отклоненных дней</value>
    <comment>Number of days, which were rejected</comment>
  </data>
  <data name="Pending" xml:space="preserve">
    <value>В ожидании обработки</value>
    <comment>Pending</comment>
  </data>
  <data name="Pending requests" xml:space="preserve">
    <value>Ожидающие запросы</value>
  </data>
  <data name="Please select leaveType" xml:space="preserve">
    <value>Выберите тип отпуска</value>
    <comment>Please select leaveType</comment>
  </data>
  <data name="Rejected" xml:space="preserve">
    <value>Отклонено</value>
    <comment>Rejected</comment>
  </data>
  <data name="Rejected requests requests" xml:space="preserve">
    <value>Отклоненные запросы</value>
  </data>
  <data name="Requested at" xml:space="preserve">
    <value>Дата запроса</value>
    <comment>Requested at</comment>
  </data>
  <data name="Requesting employee" xml:space="preserve">
    <value>Запрашивающий сотрудник</value>
    <comment>Requesting employee</comment>
  </data>
  <data name="Requests to handle by manager" xml:space="preserve">
    <value>Запросы, которые должен обработать начальник</value>
  </data>
  <data name="Requests, accepted by manager. Employee can take his leave in indicated period" xml:space="preserve">
    <value>Запросы, одобренные начальником. Сотрудник может взять отпуск.</value>
    <comment>Requests, accepted by manager. Employee can take his leave in indicated period</comment>
  </data>
  <data name="Requests, rejected by manager. Employee cant leave the company in indicated period" xml:space="preserve">
    <value>Запросы, отклоненные начальником. Сотрудник должен остаться.</value>
    <comment>Requests, rejected by manager. Employee cant leave the company in indicated period</comment>
  </data>
  <data name="Sold of days" xml:space="preserve">
    <value>Остаток дней</value>
    <comment>Sold of days</comment>
  </data>
  <data name="Start date" xml:space="preserve">
    <value>Дата начала</value>
    <comment>Start date</comment>
  </data>
  <data name="Start date is required" xml:space="preserve">
    <value>Дата начала - обязательное поле</value>
    <comment>Start date is required</comment>
  </data>
  <data name="Total number of leave requests" xml:space="preserve">
    <value>Общее количество запрошенных дней</value>
    <comment>Total number of leave requests</comment>
  </data>
  <data name="Used" xml:space="preserve">
    <value>Использовано</value>
    <comment>Used</comment>
  </data>
  <data name="Your allocation" xml:space="preserve">
    <value>Вам назначено</value>
    <comment>Your allocation</comment>
  </data>
</root>