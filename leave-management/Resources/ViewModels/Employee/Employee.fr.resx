<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Accept th conditions" xml:space="preserve">
    <value>Accepter les conditions th</value>
    <comment>Accept th conditions</comment>
  </data>
  <data name="Agree to all conditions" xml:space="preserve">
    <value>Accepter toutes les conditions</value>
    <comment>Agree to all conditions</comment>
  </data>
  <data name="Confirm password" xml:space="preserve">
    <value>Confirmer le mot de passe</value>
    <comment>Confirm password</comment>
  </data>
  <data name="Confirm your password" xml:space="preserve">
    <value>Confirmez votre mot de passe</value>
    <comment>Confirm your password</comment>
  </data>
  <data name="Date of birth" xml:space="preserve">
    <value>Date de naissance</value>
    <comment>Date of birth</comment>
  </data>
  <data name="Date of birth cant be empty" xml:space="preserve">
    <value>Date de naissance ne peut pas être vide</value>
    <comment>Date of birth cant be empty</comment>
  </data>
  <data name="Date of birth of employee" xml:space="preserve">
    <value>Date de naissance de l’employé</value>
    <comment>Date of birth of employee</comment>
  </data>
  <data name="Date of employement" xml:space="preserve">
    <value>Date d’emploi</value>
    <comment>Date of employement</comment>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Messagerie électronique</value>
    <comment>Email</comment>
  </data>
  <data name="Employee title" xml:space="preserve">
    <value>Titre de l’employé</value>
    <comment>Employee title</comment>
  </data>
  <data name="Employement date" xml:space="preserve">
    <value>Date d’emploi</value>
    <comment>Employement date</comment>
  </data>
  <data name="Enter first name" xml:space="preserve">
    <value>Entrez le prénom</value>
    <comment>Enter first name</comment>
  </data>
  <data name="Enter last(family) name" xml:space="preserve">
    <value>Entrez le nom de la dernière (famille)</value>
    <comment>Enter last(family) name</comment>
  </data>
  <data name="Enter phone number" xml:space="preserve">
    <value>Entrez le numéro de téléphone</value>
    <comment>Enter phone number</comment>
  </data>
  <data name="Enter user name" xml:space="preserve">
    <value>Entrez le nom d’utilisateur</value>
    <comment>Enter user name</comment>
  </data>
  <data name="First name" xml:space="preserve">
    <value>Prénom</value>
    <comment>First name</comment>
  </data>
  <data name="First name required" xml:space="preserve">
    <value>Prénom requis</value>
    <comment>First name required</comment>
  </data>
  <data name="Function of this employee" xml:space="preserve">
    <value>Fonction de cet employé</value>
    <comment>Function of this employee</comment>
  </data>
  <data name="Last (family) name" xml:space="preserve">
    <value>Nom du famille</value>
    <comment>Last (family) name</comment>
  </data>
  <data name="Last name" xml:space="preserve">
    <value>Nom de famille</value>
    <comment>Last name</comment>
  </data>
  <data name="Last name required" xml:space="preserve">
    <value>Nom de famille requis</value>
    <comment>Last name required</comment>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Nom</value>
    <comment>LastName</comment>
  </data>
  <data name="M., Ms., Mrs., Miss" xml:space="preserve">
    <value>M., Mme, Mme, Mlle</value>
    <comment>M., Ms., Mrs., Miss</comment>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Mot de passe</value>
    <comment>Password</comment>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Téléphone</value>
    <comment>Phone</comment>
  </data>
  <data name="Phone number" xml:space="preserve">
    <value>Numéro de téléphone</value>
    <comment>Phone number</comment>
  </data>
  <data name="Phone number required" xml:space="preserve">
    <value>Numéro de téléphone requis</value>
    <comment>Phone number required</comment>
  </data>
  <data name="Roles" xml:space="preserve">
    <value>Rôles</value>
    <comment>Roles</comment>
  </data>
  <data name="The main user name which will be displayed like your login" xml:space="preserve">
    <value>Le nom d’utilisateur principal qui s’affichera comme votre connexion</value>
    <comment>The main user name which will be displayed like your login</comment>
  </data>
  <data name="The main user name which will be displayed like your login1" xml:space="preserve">
    <value>Le nom d’utilisateur principal qui s’affichera comme votre connexion</value>
    <comment>The main user name which will be displayed like your login</comment>
  </data>
  <data name="The password and confirmation password do not match." xml:space="preserve">
    <value>Le mot de passe et le mot de passe de confirmation ne correspondent pas.</value>
    <comment>The password and confirmation password do not match.</comment>
  </data>
  <data name="The {0} must be at least {2} and at max {1} characters long." xml:space="preserve">
    <value>Le {0} doit être au moins {2} et au maximum {1} caractères longs.</value>
    <comment>The Password must be at least 6 and at max 100 characters long.</comment>
  </data>
  <data name="User name" xml:space="preserve">
    <value>Nom d’utilisateur</value>
    <comment>User name</comment>
  </data>
  <data name="User name is required" xml:space="preserve">
    <value>Le nom d’utilisateur est requis</value>
    <comment>User name is required</comment>
  </data>
  <data name="Users' first name" xml:space="preserve">
    <value>Prénom de l'utilisateur</value>
    <comment>Users' first name</comment>
  </data>
  <data name="You must accept contract" xml:space="preserve">
    <value>Vous devez accepter le contrat</value>
    <comment>You must accept contract</comment>
  </data>
  <data name="Your email" xml:space="preserve">
    <value>Votre e-mail</value>
    <comment>Your email</comment>
  </data>
  <data name="Your password" xml:space="preserve">
    <value>Votre mot de passe</value>
    <comment>Your password</comment>
  </data>
</root>